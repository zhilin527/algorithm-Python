# -*- coding: UTF-8 -*-from concurrent.futures import ThreadPoolExecutor,as_completedimport time# 线程池好处:# 控制最大线程数,# 复用线程->频繁创建销毁线程会浪费大量系统资源,# 隔离业务的作用，有的业务资源消耗大，有的业务在乎准确性，避免互相影响# times模拟网络请求时间def get_html(times):    time.sleep(times)    print('get page {0}s finished.'.format(times))    return timesexecutor = ThreadPoolExecutor(2)# task1 = executor.submit(get_html,(5))# task2 = executor.submit(get_html,(3))urls = [3,2,5,6,1,4,9,10]all_tasks = [executor.submit(get_html,(url)) for url in urls]for future in as_completed(all_tasks):    data = future.result()    print('in main : get page {}s success.'.format(data))# for data in executor.map(get_html,urls):#     print('in main : get page {0}s sucess.'.format(data))