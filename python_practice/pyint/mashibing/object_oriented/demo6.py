# -*- coding: UTF-8 -*-# 多态# Java多态实现步骤：# 继承# 重写# 父类引用指向子类实例对象# Java是静态类型的语言，对传入方法的参数，限定类型，必须是Person或者Person的子类# Python是动态类型的语言，'鸭子类型'，只要有eat方法就可以执行#  不关心对象的类型，只关心对象的行为## Python True+1可以计算，为什么？# Python中只要实现了特殊方法__add__，就可以执行# 所以不关心对象的类型，只要实现了特殊方法就行# 鸭子类型# 所以Python的多态行为更加灵活class Person(object):    def eat(self):        print('人需要吃饭')class Student(Person):    def eat(self):        print('学生吃学生餐')class Teacher(Person):    def eat(self):        print('讲师点外卖')# -------------------------------class Bird(object):    def eat(self):        print('早起的鸟儿有虫吃')def fun(p):    p.eat()if __name__ == '__main__':    fun(Person())    fun(Student())    fun(Teacher())    fun(Bird())    print(bool.mro())