# -*- coding: UTF-8 -*-# 继承# 方法重写# 封装-提高程序的安全性# 继承-提高代码的复用性# 多态-提高程序的可扩展性和可维护性## 重载指的是同名方法，不同参数类型个数，跟继承没有关系# Python中没有原生重载，但可以通过functools.singledispatch实现from functools import singledispatchclass Person(object):    def __init__(self,name,age):        self.name = name        self.age = age    def show(self):        print(self.name,self.age)class Student(Person):    def __init__(self,name,age,gender):        super().__init__(name,age)        self.gender = gender    def show(self,num):        print(self.name,self.age,self.gender)        print(num)@singledispatchdef fprint(obj):    return NotImplemented@fprint.register(str)def _(obj):    print('是一个str')    print(obj)@fprint.register(int)def _(obj):    print('是一个int')    print(obj)if __name__ == '__main__':    stu1 = Student('zhang3',18,'male')    stu1.show(3)    # fprint(4)