#mysql基础考点#事务的原理，特性，事务并发控制#常用的字段#常用数据库引擎之间区别#事务是数据库并发控制的基本单位#事务可以看作一系列SQL语句的集合#事务要么全部执行成功，要么全部执行失败（回滚）#回滚的例子：#射频指标测试的时候，整机的通道，功率，仪表的参数，和最终的射频指标结果可能是分多条sql语句插入的。#如果最终的指标结果由于某种原因插入失败，抛出异常，就会执行rollback()，前面的信息也不会插入#conn = MySqldb.connect(xx)#cursor = conn.cursor()#try:#   cursor.excute(sql1)#   cursor.excute(sql2)#   conn.commit()#except:#   conn.rollback()#   conn.close()#   raise#事务的ACID特性#原子性Atomicity：一个事务当中的所有操作全部完成或者失败#一致性Consistency：事务开始和结束之后数据完整性没有被破坏#隔离性Isolation：允许多个事务同时对数据库修改和读写#持久性Durability：事务结束之后，修改是永久的不会丢失#事务的并发控制可能产生那些问题#1。幻读phantom read，一个事务第二次查出现第一次没有的结果#2。非重复读nonrepeatable read，一个事务重复读两次得到不同的结果#3。脏读dirty read，一个事务读取到另一个事务没有提交的修改#4。丢失修改lost update，并发写入造成其中一些修改丢失#四种事务隔离级别#1。读未提交read uncommitted 别的事务可以读取到未提交改变#2。读已提交read committed 只能读取到已经提交的数据#3。可重复读repeatable read 同一个事务先后查询结果一样#4。串行化Serializable 事务完全串行化的执行，隔离级别最高，执行效率最低#高并发场景下，写入数据库会有数据重复问题##使用数据库的唯一索引#使用队列异步写入#使用redis等实现分布式锁#乐观锁，悲观锁#悲观锁是先获取锁再进行操作，一锁二查三更新#乐观锁先修改，更新的时候发现数据已经变了就回滚#响应速度，冲突频率重试代价来判断使用哪一种#Mysql常用数据类型#1。字符串，char，varchar，text，tinytext#2。数值，tinyint 1byte ；int 4byte；bigint 8byte；float 4byte；double 8byte#3。日期和时间，DATE 3byte；DATETIME 8byte；TIMESTAP 4byte#innoDB和myISAM#myISAM不支持事务，innoDB支持#myISAM不支持外健，innoDB支持#myISAM只支持表锁，innoDB支持表锁和行锁#myISAM支持全文索引#myISAM频繁读取好，用例表，整机ru表，ru配置表；innoDb频繁写好，监测结果表#