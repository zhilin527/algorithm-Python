#python3和python2差异#1.print成为函数#2.编码问题，python3不再有unicode对象，直接就是str就是unicode#3.除法变化，python3除法将会返回浮点数#from __future__ import print_function#在python2中可以这样来用python3的print函数print('a','b',sep='|')#python3的print函数可以自定义输出格式，可以加分隔符等#python3中的中文直接输出，'中文',而不用加u'中文'；#因此，中文可以做变量名def 大写(s):    return s.upper()大写('aadd')#python3中想要使用除法，需用//#python3改进#1。类型注解，type hint#2。改进了super()方便直接调用父类函数#3。高级解包操作。a,b,*rest = range(10)def func(name:str)->str:    return 'Hello'+namefunc('Zhang')class Base(object):    def hello(self):        print('hello')class Sub1(Base):    def hello(self):        #py2        return super(Sub1,self).hello()sub1 = Sub1()sub1.hello()class Sub2(Base):    def hello(self):        #py3        return super().hello()sub2 = Sub2()sub2.hello()#4。限定关键字参数#5。python3重新抛出异常不会丢失栈信息#6。一切返回迭代器range，zip，map，dict.values,import shutildef mycopy(source,dest):    try:        shutil.copy2(source,dest)    except OSError:#在python2里面，raise会丢失原来的traceback信息        raise NotImplementedError("automatic sudo injection") from OSErrormycopy('old','new')#python3新增的东西#1。yiled from 链接子生成器#2。asyncio内置库，async/await原生协程支持异步编程#3。新的内置库 enum，mock，asyncio，ipaddress，concurrent.futures等#python3改进#1。生成的pyc文件统一放到__pycache__#2。一些内置的库的修改，urllib，selector等#3。性能优化等#怎样证明写过python2和python3代码#熟悉一些兼容python2/3的工具#1。six模块#2。2to3等工具转换#3。__future__